// Mocks generated by Mockito 5.1.0 from annotations
// in flutter_todo_app/test/notifier/todo_list_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;

import 'package:flutter_todo_app/model/todo.dart' as _i2;
import 'package:flutter_todo_app/repository/id_repository.dart' as _i4;
import 'package:flutter_todo_app/repository/location_search_repository.dart'
    as _i7;
import 'package:flutter_todo_app/repository/notifications_repository.dart'
    as _i5;
import 'package:flutter_todo_app/repository/todo_list_repository.dart' as _i3;
import 'package:geocoding/geocoding.dart' as _i8;
import 'package:google_maps_flutter/google_maps_flutter.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeTodo_0 extends _i1.Fake implements _i2.Todo {}

/// A class which mocks [TodoListRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodoListRepository extends _i1.Mock
    implements _i3.TodoListRepository {
  MockTodoListRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i2.Todo> getAll() => (super.noSuchMethod(Invocation.method(#getAll, []),
      returnValue: <_i2.Todo>[]) as List<_i2.Todo>);
  @override
  List<_i2.Todo> getTodosAfterDt(DateTime? dt) =>
      (super.noSuchMethod(Invocation.method(#getTodosAfterDt, [dt]),
          returnValue: <_i2.Todo>[]) as List<_i2.Todo>);
  @override
  _i2.Todo get(String? id) => (super.noSuchMethod(Invocation.method(#get, [id]),
      returnValue: _FakeTodo_0()) as _i2.Todo);
  @override
  _i2.Todo create(_i2.Todo? todo) =>
      (super.noSuchMethod(Invocation.method(#create, [todo]),
          returnValue: _FakeTodo_0()) as _i2.Todo);
  @override
  _i2.Todo update(_i2.Todo? todo) =>
      (super.noSuchMethod(Invocation.method(#update, [todo]),
          returnValue: _FakeTodo_0()) as _i2.Todo);
  @override
  bool delete(String? id) =>
      (super.noSuchMethod(Invocation.method(#delete, [id]), returnValue: false)
          as bool);
}

/// A class which mocks [IdRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIdRepository extends _i1.Mock implements _i4.IdRepository {
  MockIdRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int createNotificationId() =>
      (super.noSuchMethod(Invocation.method(#createNotificationId, []),
          returnValue: 0) as int);
  @override
  String createTodoId() =>
      (super.noSuchMethod(Invocation.method(#createTodoId, []), returnValue: '')
          as String);
}

/// A class which mocks [NotificationsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotificationsRepository extends _i1.Mock
    implements _i5.NotificationsRepository {
  MockNotificationsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<bool> setNotification(
          int? id, String? title, String? body, DateTime? scheduleAt) =>
      (super.noSuchMethod(
          Invocation.method(#setNotification, [id, title, body, scheduleAt]),
          returnValue: Future<bool>.value(false)) as _i6.Future<bool>);
  @override
  _i6.Future<bool> cancelNotification(int? id) =>
      (super.noSuchMethod(Invocation.method(#cancelNotification, [id]),
          returnValue: Future<bool>.value(false)) as _i6.Future<bool>);
}

/// A class which mocks [LocationSearchRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocationSearchRepository extends _i1.Mock
    implements _i7.LocationSearchRepository {
  MockLocationSearchRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<List<_i8.Location>> getLocations(String? address) =>
      (super.noSuchMethod(Invocation.method(#getLocations, [address]),
              returnValue: Future<List<_i8.Location>>.value(<_i8.Location>[]))
          as _i6.Future<List<_i8.Location>>);
  @override
  _i6.Future<String?> getAddress(_i9.LatLng? latLng) =>
      (super.noSuchMethod(Invocation.method(#getAddress, [latLng]),
          returnValue: Future<String?>.value()) as _i6.Future<String?>);
}
